version: '3'

networks:
  app-tier:
    driver: bridge

services:
  redis-master-01:
    image: 'bitnami/redis:6.2'
    hostname: redis-master-01
    container_name: redis-master-01
    environment:
      - REDIS_REPLICATION_MODE=master # The replication mode. Possible values master/slave. No defaults.
      - REDIS_PASSWORD=str0ng_passw0rd
      - REDIS_NODES=redis redis-slave-01 redis-slave-01
      - REDIS_CLUSTER_CREATOR=yes
    networks:
      - app-tier
    ports:
      - '16379:6379'
  redis-slave-01:
    image: 'bitnami/redis:6.2'
    hostname: redis-slave-01
    container_name: redis-slave-01
    environment:
      - REDIS_REPLICATION_MODE=slave # The replication mode. Possible values master/slave. No defaults.
      - REDIS_MASTER_HOST=redis-master-01
      - REDIS_MASTER_PASSWORD=str0ng_passw0rd
      - REDIS_PASSWORD=str0ng_passw0rd
      - REDIS_NODES=redis redis-slave-01 redis-slave-01
      - REDIS_CLUSTER_CREATOR=yes
    ports:
      - '26379:6379'
    depends_on:
      - redis-master-01
    networks:
      - app-tier
    # command: ["redis-cli -p 6379","REPLICAOF","redis","6379"]
  redis-slave-02:
    image: 'bitnami/redis:6.2'
    hostname: redis-slave-02
    container_name: redis-slave-02
    environment:
      - REDIS_REPLICATION_MODE=slave # The replication mode. Possible values master/slave. No defaults.
      - REDIS_MASTER_HOST=redis-master-01
      - REDIS_MASTER_PASSWORD=str0ng_passw0rd
      - REDIS_PASSWORD=str0ng_passw0rd
      - REDIS_NODES=redis redis-slave-01 redis-slave-01
      - REDIS_CLUSTER_CREATOR=yes
    ports:
      - '36379:6379'
    depends_on:
      - redis-master-01
    networks:
      - app-tier
    # command: ["redis-cli -p 6379","REPLICAOF","redis","6379"]
  redis-sentinel:
    image: 'bitnami/redis-sentinel:latest'
    hostname: redis-sentinel
    # container_name: redis-sentinel
    environment:
      - REDIS_MASTER_HOST=redis-master-01 # Host of the Redis(TM) master to monitor
      - REDIS_MASTER_PASSWORD=str0ng_passw0rd
      - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=3000
      - REDIS_SENTINEL_FAILOVER_TIMEOUT=3000
    depends_on:
      - redis-master-01
      - redis-slave-01
      - redis-slave-02
    ports:
      - '6379-6381:26379'
    networks:
      - app-tier


# docker-compose up --scale redis-sentinel=3 -d